#
# A "simple" Makefile to compile a C driver for the Conway Life Example
#
#

SIDLFILES=../wave2d.sidl ../libCxx/wave2d_cxx.sidl ../libF90/wave2d_f90.sidl 
ALLLIBS= ../libCxx/libwave.cxx.la 
# this Makefiles uses GNU make extensions
include babel.make		# get files generated by Babel
STUBOBJS=$(STUBSRCS:.cxx=.lo)	# libtool objects
ALLOBJS=$(STUBSRCS:.cxx=.lo)	# all libtool objects
ALLSOBJS=$(STUBSRCS:.cxx=.o)	# all raw objects
ALLSTATICS=$(STUBSRCS:.cxx=.lo)	# .lo is used for statically linked objects
ALLSRCS=$(STUBSRCS)

all : runCxx2Cxx runCxx2F90 runCxx2GNUplot

babel-stamp: $(SIDLFILES)
	@rm -f babel-temp
	@touch babel-temp
	babel --client=Cxx $(SIDLFILES)
	@rm -f babel.make.package babel.make.depends
	@mv -f babel-temp $@

$(ALLSRCS) : babel-stamp
	@if test -f $@; then \
	  touch $@; \
	else \
	  rm -f babel-stamp; \
	  $(MAKE) $(MAKEFLAGS) babel-stamp; \
	fi

# Note: we use GNU libtool in a peculiar way, actually installing it
# with the rest of Babel as ... babel-libtool

runCxx2Cxx: babel-stamp  libstubs.la main2Cxx.lo ../libCxx/libwave2d.cxx.la
	babel-cxx -o runCxx2Cxx --with-f90 -static main2Cxx.o libstubs.la ../libCxx/libwave2d.cxx.la

runCxx2F90: babel-stamp  libstubs.la main2F90.lo ../libF90/libwave2d.f90.la 
	babel-cxx  -o runCxx2F90 --with-f90 -static main2F90.o libstubs.la ../libF90/libwave2d.f90.la

runCxx2GNUplot: babel-stamp  libstubs.la main2GNUplot.lo ../libCxx/libwave2d.cxx.la
	babel-cxx  -o runCxx2GNUplot --with-f90 -static main2GNUplot.o libstubs.la ../libCxx/libwave2d.cxx.la

libstubs.la : $(ALLOBJS)
	babel-cxx  -o libstubs.la $(ALLOBJS) 

clean: 
	$(RM) *.o *.lo

# source files are generated, so its okay to remove most
# but not IMPLs!

new: clean
	$(RM) main babel-stamp $(STUBHDRS) $(STUBSRCS) \
	$(IORHDRS) $(IORSRCS) $(SKELHDRS) $(SKELSRCS) runCxx2Cxx runCxx2F90
	rm -rf .libs 

.SUFFIXES:
.SUFFIXES: .c .cxx .lo .o

.c.lo:
	babel-cc -c --with-f90 ${CFLAGS} $< 

.cxx.lo:
	babel-cxx -c -static ${CXXFLAGS} $<
