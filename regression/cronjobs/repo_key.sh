#! /bin/tcsh

# 
# 
# One of the challenges for the cca-forum.org BOF was to recommend how
# groups can make local backups of cca1.cca-forum.org (the CVS repository
# machine). My recommendation based on discussions with David Bernholdt and
# James Buszard-Welcher (LBL) is to use cron, ssh-agent and ssh+rsync or
# scp.
# 
# Let's assume your remote computer is called myhome.gov. Here are the
# steps for you to follow:
#  1. Get an account on cca1.cca-forum.org and set up your ssh access via
#     public/private key authentication.
#  2. On myhome.gov, write a script to launch a backup and store it
#     someplace like ${HOME}/bin/backup_cca_forum (more on this later).
#     chmod og-rwx ${HOME}/bin/backup_cca_forum* is good idea.
#  3. Create user crontab to launch ${HOME}/bin/backup_cca_forum at
#     whatever interval you desire.
#  4. Run eval `ssh-agent`  in a terminal window on myhome.gov. Execute 
#     printenv | grep "^SSH_A" to obtain the values of SSH_AUTH_SOCK and
#    SSH_AGENT_PID generated by ssh-agent.
#  5. Edit ${HOME}/bin/backup_cca_forum and use the appropriate syntax to
#     set the environment variables SSH_AUTH_SOCK and SSH_AGENT_PID to the
#     values produced in the previous step. The environment variables must
#     be set in the script before the rsync or scp call.
#  6. Run ssh-add to add your private key to the ssh-agent.
#  7. Clear the environment variables SSH_AUTH_SOCK and SSH_AGENT_PID and
#     close the terminal window on myhome.gov. I suggest clearing the
#     environment variable to avoid things like a .logout that kills
#     ssh-agent or does a ssh-add -D.
# Once you've done these steps, the crontab can get your private key to
# 
# connect to cca-forum.org for rsync or scp. If myhome.gov is compromised,
# it's possible (but relatively difficult) for root to get your private key
# by snooping around in memory. The adversary can use the running ssh-agent
# to pretend to be you without getting your private key. However, I suspect
# that many of us already leave ssh-agent running most of the time, so this
# approach does not increase the vulnerability.
# 
# If myhome.gov is rebooted or if ssh-agent dies for some reason, you need
# to execute steps 4-7 again to create a new ssh-agent and link the backup
# script to it.
# 
# Here is an example of the backup script that the Babel project uses.
# 
#  #!/bin/sh
# SSH_AUTH_SOCK=/tmp/ssh-xxxx1234/agent.1234
# SSH_AGENT_PID=1235
# export SSH_AUTH_SOCK SSH_AGENT_PID
# /usr/bin/rsync -avzub -e ssh $USER@cca1.cca-forum.org:/home/cvs/babel/babel /home/casc/repository/babel

# store any old agent info
if ($?SSH_AUTH_SOCK) then
    set OLD_AUTH_SOCK=$SSH_AUTH_SOCK
endif
if ($?SSH_AGENT_PID) then
    set OLD_AGENT_PID=$SSH_AGENT_PID
endif
unsetenv SSH_AUTH_SOCK
unsetenv SSH_AGENT_PID
set host=`hostname --short`

ssh-agent > tmp.out
eval `cat tmp.out`
setenv SSH_AUTH_SOCK `grep SSH_AUTH_SOCK tmp.out | sed -e 's/.*SSH_AUTH_SOCK //' -e 's/;$//'`
setenv SSH_AGENT_PID `grep SSH_AGENT_PID tmp.out | sed -e 's/.*SSH_AGENT_PID //' -e 's/;$//'`
# export SSH_AUTH_SOCK SSH_AGENT_PID
ssh-add ${HOME}/.ssh/cca-forum

set file2=${HOME}/bin/babel-cvs-${host}.settings
echo "export CVSROOT=:ext:$USER@cca-forum.org:/home/cvs/babel/repositories" > $file2
echo "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $file2
echo "export SSH_AGENT_PID=$SSH_AGENT_PID" >> $file2
chmod -f og-rwx $file2


rm tmp.out
if ($?OLD_AUTH_SOCK) then 
    setenv SSH_AUTH_SOCK $OLD_AUTH_SOCK
endif
if ($?OLD_AGENT_PID) then
    setenv SSH_AGENT_PID $OLD_AGENT_PID
endif
exit
